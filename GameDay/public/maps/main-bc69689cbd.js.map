{"version":3,"sources":["Scripts/js/site.js","Scripts/js/site.ts"],"names":["showDetails","$","ajax","success","showDetails.success","loadEditScreen","initMap","getCoor","coor","Address","submit","e","preventDefault","inputs","values","each","this","name","val","url","type","data","__RequestVerificationToken","Name","Game","DateTime","AddressId","unbind","ID","Comments","PlayersAttending","on","removeClass","addClass"],"mappings":"AAsCA,QCSMA,aAAQA,GACVA,EAAAA,QAAUA,YAAAA,SACVA,IAAEA,GAAKA,kBAAAA,CDRPC,GAAEC,MCUEF,KAAKA,MACLA,IAAIA,EACJA,KAAAA,KDRAG,QCSMC,SAAAA,GACFA,EAAAA,qBAAUA,KAAAA,GACbA,aD+BT,QCYQC,gBAAMA,GACVA,GAAEA,GAAAA,eAAyBA,CAC3BA,GAAEA,qBAAiBA,KAASA,GAC/BA,EAAAA,QAAAA,SAAAA,UDRD,QCeAC,SAAAA,EAAAA,EAAAA,EAAAA,GAEIA,GAAAA,GAAAA,GAAAA,QAAAA,KAAAA,OAAmCA,WAAAA,GAAAA,WAAAA,IAE/BA,GACAA,OAAMA,EACRA,KAAAA,EAGLA,KAAAA,GAAAA,QAAAA,KAAAA,IAAAA,SAAAA,eAAAA,OAAAA,GDZD,QCiBQC,WACJA,GAAAA,GAAAA,EAAAA,gBAAAA,OAEIA,EAACA,GAAUA,QAAOA,KAAEA,QDhBxBC,GCiBID,SAAUA,QAAUA,GAAMA,SAAeA,EAAKA,GDhB9C,GCiBIA,GAAUA,OAAOA,KAAIA,eAASA,GAASA,CACvCA,GAAIA,GAAMA,EAAQA,GAAGA,SAASA,SAASA,MACvCA,EAAQA,EAAUA,GAAEA,SAAQA,SAAAA,KAC5BA,SAAAA,EAAAA,EAAAA,IAAAA,GAEAA,IAAAA,UAAAA,EAAAA,GAAAA,SAAgCA,SDfhC,ECkBYA,GAAAA,QAAAA,KAAAA,QACRA,IAAAA,IACDA,SAAAA,EAAAA,GAAAA,SAAAA,WAECA,EAAIA,GAAAA,SAAUA,UACrBA,IAAAA,UAAAA,EAAAA,GAAAA,SAAAA,cAEAA,SAAAA,IAAAA,wDAAAA,KA1IT,GAAAE,SAAA,WAAAA,QAAAA,MAMAA,MAAAA,KDFAR,GAAE,eCQIS,OAAiB,SAAAC,GACnBA,EAAAC,gBACA,IAAIC,GAASZ,EAAE,sBACfa,IDPAD,GCQIE,KAAO,WACRD,EAAAE,KAAAC,MAAAhB,EAAAe,MAAAE,OAEH,IAAEC,GAAK,eDPPlB,GAAEC,MCSEkB,KAAK,OACLD,IAAIA,EDPJE,MCSIC,2BAAoBrB,EAAA,wCAAAiB,MACpBK,KAAMT,EAAa,KACnBU,KAAAV,EAAiB,KACjBW,SAASX,EAAS,SACrBY,UAAAZ,EAAA,WDNDX,QCQMA,SAAAA,GACFA,EAAEA,iBAAAA,KAAqBA,gBACvBA,EAAEA,qBAAqBA,IAAIA,IAAIA,QAC/BA,EAAEA,sBAAsBA,IAAIA,GAC5BA,EAAEA,kBAAkBA,IAAEA,IACzBA,EAAAA,oBAAAA,IAAAA,MAGNF,EAAAe,MAAAW,WDWH1B,EAAE,mBCUkBS,OAAG,SAAAC,GACnBA,EAAAC,gBACA,IAAIC,GAASZ,EAAE,0BACfa,IDTAD,GCUIE,KAAO,WACRD,EAAAE,KAAAC,MAAAhB,EAAAe,MAAAE,OAEH,IAAEC,GAAK,eAAAL,EAAA,EDTPb,GAAEC,MCWEkB,KAAK,OACLD,IAAIA,EDTJE,MCWIC,2BAAgBrB,EAAA,wCAAAiB,MAChBU,GAAId,EAAS,GACbS,KAAMT,EAAa,KACnBU,KAAAV,EAAiB,KACjBW,SAASX,EAAS,SAClBY,UAAUZ,EAAkB,UAC5Be,SAAAf,EAAyB,SAC5BgB,iBAAAhB,EAAA,kBDRDX,QCUIA,SAAYA,GACZA,YAAEA,EAAqBA,IAC1BA,EAAAA,iBAAAA,KAAAA,qBDLTF,EAAE,mBCWI8B,GAAA,QAAA,WACF9B,EAAE,oCAAgC+B,YAAA,iBACnC/B,EAAAe,MAAAiB,SAAA","file":"main-bc69689cbd.js","sourcesContent":["//Address class which im not using\r\nvar Address = (function () {\r\n    function Address() {\r\n    }\r\n    return Address;\r\n})();\r\n//submit for the create event. This stops the page from refreshing from the post.\r\n//Calls the create event and then reloads the event list\r\n//var createApp = \r\n$('#createForm').submit(function (e) {\r\n    e.preventDefault();\r\n    var inputs = $('#createForm :input');\r\n    var values = {};\r\n    inputs.each(function () {\r\n        values[this.name] = $(this).val();\r\n    });\r\n    var url = '/Event/Create';\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: url,\r\n        data: {\r\n            __RequestVerificationToken: $('[name= \"__RequestVerificationToken\"]').val(),\r\n            Name: values['Name'],\r\n            Game: values['Game'],\r\n            DateTime: values['DateTime'],\r\n            AddressId: values['AddressId']\r\n        },\r\n        success: function (result) {\r\n            $('#EventListDiv').load('/Event/Index');\r\n            $('#EventNameTextBox').val('').focus();\r\n            $('#EventGameDropDown').val(0);\r\n            $('#EventDateTime').val('');\r\n            $('#AddressDropDown').val(0);\r\n        }\r\n    });\r\n    $(this).unbind();\r\n});\r\n//show details of the event clicked in the event list\r\nfunction showDetails(id) {\r\n    $('#map').removeClass('hidden');\r\n    var url = '/Event/Details/' + id;\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: url,\r\n        data: null,\r\n        success: function (result) {\r\n            $('#DetailsContainer').html(result);\r\n            getCoor();\r\n        },\r\n    });\r\n}\r\n;\r\n//The save button on the edit screen saves the information, while reloading the updated \r\n//details page and updates the event list page all without refreshing the page\r\n$('#editDetailForm').submit(function (e) {\r\n    e.preventDefault();\r\n    var inputs = $('#editDetailForm :input');\r\n    var values = {};\r\n    inputs.each(function () {\r\n        values[this.name] = $(this).val();\r\n    });\r\n    var url = '/Event/Edit/' + values['ID'];\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: url,\r\n        data: {\r\n            __RequestVerificationToken: $('[name= \"__RequestVerificationToken\"]').val(),\r\n            ID: values['ID'],\r\n            Name: values['Name'],\r\n            Game: values['Game'],\r\n            DateTime: values['DateTime'],\r\n            AddressId: values['AddressId'],\r\n            Comments: values['Comments'],\r\n            PlayersAttending: values['PlayersAttending']\r\n        },\r\n        success: function (result) {\r\n            showDetails(values['ID']);\r\n            $('#EventListDiv').load('/Event/Index');\r\n        }\r\n    });\r\n});\r\n//Highlight the event click in the event list\r\n$('.eventContainer').on('click', function () {\r\n    $('#EventListDiv>div .panel-primary').removeClass(\"panel-primary\");\r\n    $(this).addClass(\"panel-primary\");\r\n});\r\n//load the edit screen of the event when the \"edit\" button is clicked\r\nfunction loadEditScreen(id) {\r\n    var url = '/Event/Edit/' + id;\r\n    $('#DetailsContainer').load(url);\r\n    $('#map').addClass('hidden');\r\n}\r\n//----------------------------Google Maps---------------------------------//\r\n//this function loads the google maps onto the page\r\nfunction initMap(latitude, longitude, zoom, exist) {\r\n    //assign lat and long to a google variable\r\n    var myLatlng = new google.maps.LatLng(parseFloat(latitude), parseFloat(longitude));\r\n    //give the map the settings we want\r\n    var mapOptions = {\r\n        center: myLatlng,\r\n        zoom: zoom\r\n    };\r\n    //loads the map\r\n    map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n}\r\n//get coordinates of the address passed to google\r\nfunction getCoor() {\r\n    var address = $('#addressElem').text();\r\n    //initialize the function that gets the google coordinates\r\n    var coor = new google.maps.Geocoder();\r\n    coor.geocode({ address: address }, function (results, status) {\r\n        if (status == google.maps.GeocoderStatus.OK) {\r\n            var lat = results[0].geometry.location.lat();\r\n            var lng = results[0].geometry.location.lng();\r\n            initMap(lat, lng, 16, true);\r\n            //center the map over the result\r\n            map.setCenter(results[0].geometry.location);\r\n            //place a marker at the location\r\n            var marker = new google.maps.Marker({\r\n                map: map,\r\n                position: results[0].geometry.location\r\n            });\r\n            if (results[0].geometry.viewport)\r\n                map.fitBounds(results[0].geometry.viewport);\r\n        }\r\n        else {\r\n            console.log('Geocode was not successful for the following reason: ' + status);\r\n        }\r\n    });\r\n}\r\n//----------------------------Google Maps End---------------------------------//\r\n","declare var $: any;\r\ndeclare var google: any;\r\ndeclare var map: any;\r\n\r\n//Address class which im not using\r\nclass Address {\r\n    line1: string;\r\n    line2: string;\r\n    city: string;\r\n    state: string;\r\n    zip: number;\r\n}\r\n\r\n\r\n//submit for the create event. This stops the page from refreshing from the post.\r\n//Calls the create event and then reloads the event list\r\n//var createApp = \r\n$('#createForm').submit(function (e) {\r\n    e.preventDefault();\r\n    var inputs = $('#createForm :input');\r\n    var values = {};\r\n    inputs.each(function () {\r\n        values[this.name] = $(this).val();\r\n    });\r\n    var url = '/Event/Create';\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: url,\r\n        data: {\r\n            __RequestVerificationToken: $('[name= \"__RequestVerificationToken\"]').val(),\r\n            Name: values['Name'],\r\n            Game: values['Game'],\r\n            DateTime: values['DateTime'],\r\n            AddressId: values['AddressId']\r\n        },\r\n        success(result) {\r\n            $('#EventListDiv').load('/Event/Index');\r\n            $('#EventNameTextBox').val('').focus();\r\n            $('#EventGameDropDown').val(0);\r\n            $('#EventDateTime').val('');\r\n            $('#AddressDropDown').val(0);\r\n        }\r\n    });\r\n    $(this).unbind();\r\n});\r\n\r\n//show details of the event clicked in the event list\r\nfunction showDetails(id: number) {\r\n    $('#map').removeClass('hidden');\r\n    var url = '/Event/Details/' + id;\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: url,\r\n        data: null,\r\n        success(result) {\r\n            $('#DetailsContainer').html(result);\r\n            getCoor();\r\n        },\r\n    });\r\n};\r\n\r\n\r\n//The save button on the edit screen saves the information, while reloading the updated \r\n//details page and updates the event list page all without refreshing the page\r\n$('#editDetailForm').submit(e => {\r\n    e.preventDefault();\r\n    var inputs = $('#editDetailForm :input');\r\n    var values = {};\r\n    inputs.each(function () {\r\n        values[this.name] = $(this).val();\r\n    });\r\n    var url = '/Event/Edit/' + values['ID'];\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: url,\r\n        data: {\r\n            __RequestVerificationToken: $('[name= \"__RequestVerificationToken\"]').val(),\r\n            ID: values['ID'],\r\n            Name: values['Name'],\r\n            Game: values['Game'],\r\n            DateTime: values['DateTime'],\r\n            AddressId: values['AddressId'],\r\n            Comments: values['Comments'],\r\n            PlayersAttending: values['PlayersAttending']\r\n        },\r\n        success(result) {\r\n            showDetails(values['ID']);\r\n            $('#EventListDiv').load('/Event/Index');\r\n        }\r\n    });\r\n});\r\n\r\n//Highlight the event click in the event list\r\n$('.eventContainer').on('click', function () {\r\n    $('#EventListDiv>div .panel-primary').removeClass(\"panel-primary\");\r\n    $(this).addClass(\"panel-primary\");\r\n});\r\n\r\n//load the edit screen of the event when the \"edit\" button is clicked\r\nfunction loadEditScreen(id: number) {\r\n    var url = '/Event/Edit/' + id;\r\n    $('#DetailsContainer').load(url);\r\n    $('#map').addClass('hidden');\r\n}\r\n\r\n\r\n//----------------------------Google Maps---------------------------------//\r\n\r\n//this function loads the google maps onto the page\r\nfunction initMap(latitude: string, longitude: string, zoom: number, exist:boolean) {\r\n//assign lat and long to a google variable\r\n    var myLatlng = new google.maps.LatLng(parseFloat(latitude), parseFloat(longitude));\r\n    //give the map the settings we want\r\n    var mapOptions = {\r\n        center: myLatlng,\r\n        zoom: zoom\r\n    };\r\n    //loads the map\r\n    map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n}\r\n    \r\n\r\n//get coordinates of the address passed to google\r\nfunction getCoor() {\r\n    var address = $('#addressElem').text();\r\n    //initialize the function that gets the google coordinates\r\n    var coor = new google.maps.Geocoder();\r\n    coor.geocode({ address: address }, (results, status:string) => {\r\n        if (status == google.maps.GeocoderStatus.OK) {\r\n            var lat = results[0].geometry.location.lat();\r\n            var lng = results[0].geometry.location.lng();\r\n            initMap(lat, lng, 16, true);\r\n            //center the map over the result\r\n            map.setCenter(results[0].geometry.location);\r\n            //place a marker at the location\r\n            var marker = new google.maps.Marker(\r\n            {\r\n                map: map,\r\n                position: results[0].geometry.location\r\n            });\r\n            if (results[0].geometry.viewport)\r\n                map.fitBounds(results[0].geometry.viewport);\r\n        } else {\r\n            console.log('Geocode was not successful for the following reason: ' + status);\r\n        }\r\n    });\r\n    \r\n}\r\n\r\n//----------------------------Google Maps End---------------------------------//\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}